openapi: 3.0.3
info:
  title: Rabo Smart Pay Webhook Subscriptions Management API
  version: 0.0.1
tags:
  - name: Webhooks
  - name: Subscriptions
  - name: Verifications
servers:
  - description: local
    url: https://localhost:9090
paths:
  "/v3/webhooks/events":
    get:
      tags: [ Webhooks ]
      operationId: listEvents
      summary: List all available webhook event types.
      description: List all available webhook event types.
      responses:
        "200":
          description: List of all available event types.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListEventsResponse"
        "401":
          description: Unauthorized

  "/v3/webhooks/subscriptions":
    get:
      tags: [ Subscriptions ]
      operationId: listSubscriptions
      summary: List all webhook subscriptions.
      description: List all webhook subscriptions.
      responses:
        "200":
          description: List of all webhook subscriptions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListSubscriptionsResponse"
        "401":
          description: Unauthorized
    post:
      tags: [ Subscriptions ]
      operationId: createSubscription
      summary: Create a new webhook subscription
      description: A webhook subscription consist of a `status`, an `url`, and a set of `eventTypes`.
      parameters:
        - $ref: "#/components/parameters/idempotency-key"

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateSubscriptionRequest"
      responses:
        "201":
          description: Webhook subscription successfully created. See URL in `Location` header.
          headers:
            "idempotency-key":
              $ref: "#/components/parameters/idempotency-key"
            "location":
              $ref: "#/components/parameters/location"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: |
            Forbidden. You already have the maximum number of webhook subscriptions, and can't create another one.
  "/v3/webhooks/subscriptions/{id}":
    get:
      tags: [ Subscriptions ]
      operationId: getSubscription
      summary: Get details of an existing webhook subscription
      description: Get details of an existing webhook subscription.
      responses:
        "200":
          description: Details of the webhook subscription.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetSubscriptionResponse"
        "401":
          description: Unauthorized
        "404":
          description: Not Found
    patch:
      tags: [ Subscriptions ]
      operationId: updateSubscription
      summary: Update an existing webhook subscription
      description: |
        Updating a webhook subscription. Only values specified in the request will be updated.

        If a subscription gets disabled, and it still has active deliveries, or retries pending, Rabo Smart Pay will
        still deliver those even though the subscription is disabled.

        Keep in mind that your server might still receive events on the disabled subscription!
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateSubscriptionRequest"
      responses:
        "201":
          description: Webhook subscription successfully updated. See URL in `Location` header.
          headers:
            location:
              $ref: "#/components/parameters/location"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
    delete:
      tags: [ Subscriptions ]
      operationId: deleteWebhookSubscription
      summary: Delete an existing webhook subscription
      description: |
        Delete an existing webhook.

        If the subscription still has active deliveries, or retries pending, Rabo Smart Pay will still deliver those
        even though the subscription is deleted.

        Keep in mind that your server might still receive events on the deleted subscription!
      responses:
        "204":
          description: Webhook subscription successfully deleted.
        "401":
          description: Unauthorized
        "404":
          description: Not Found
  "/v3/webhooks/subscriptions/{id}/verify":
    post:
      tags: [ Verifications ]
      operationId: verifyWebhookSubscription
      summary: Verify webhook subscription by sending a test event
      description: Verify webhook subscription by sending a test event.
      responses:
        "200":
          description: Successfully verified webhook subscription.
        "403":
          description: Forbidden. The webhook subscription could not be verified.
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        

components:
  parameters:
    "idempotency-key":
      name: "idempotency-key"
      description: Idempotency key used to safely retry the request.
      in: header
      required: false
      schema:
        type: string
        minimum: 1
        maximum: 64
      example: "ce55fab6b56d45279f90b3d2152e7766"
    location:
      name: location
      description: Location of the resource.
      in: header
      required: true
      schema:
        type: string
        format: uri
  schemas:

    EventType:
      description: Event type.
      type: string
      enum:
        - "test/v1"
        - "order.finalized/v1"

    Subscription:
      type: object
      properties:
        status:
          description: |
            Status of the subscription. Indicates wheter or not Rabo Smart Pay will deliver to this subscription or not.
            
            Options are `enabled`, and `disabled`.
          type: string
          enum: 
          - "enabled"
          - "disabled"
        url:
          description: |
            URL of the subscription. Events for this subscription will be delivered to this URL.

            It is important that your server, at the receiving end of this URL, is set up correctly to accept events.
          type: string
          format: uri
        description:
          description: |
            Optional description that you provide to this subscription.
            
            Will be used when listing subscriptions.
          type: string
          minimum: 1
          maximum: 2048
        eventTypes:
          description: |
            Set of event types that are delivered using this subscription.

            A subscription is not allowed to have no event types associated with it, at least one must be configured.
          type: array
          minItems: 1
          items:
            $ref: "#/components/schemas/EventType"

    SubscriptionWithId:
      type: object
      required:
        - status
        - url
        - eventTypes
      allOf:
        - type: object
          required:
            - id
          properties:
            id:
              description: Unique identifier of the subscription.
              type: string
        - $ref: "#/components/schemas/Subscription"

    ListEventsResponse:
      type: object
      required:
        - events
      properties:
        events:
          type: array
          items:
            type: object
            required:
              - type
              - description
              - deprecated
            properties:
              type:
                $ref: "#/components/schemas/EventType"
              description:
                type: string
              deprecated:
                type: boolean
                default: false

    ListSubscriptionsResponse:
      type: object
      required:
        - subscriptions
      properties:
        subscriptions:
          type: array
          items:
            $ref: "#/components/schemas/SubscriptionWithId"

    CreateSubscriptionRequest:
      type: object
      required:
        - status
        - url
        - eventTypes
      allOf:
        - $ref: "#/components/schemas/Subscription"

    GetSubscriptionResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/SubscriptionWithId"

    UpdateSubscriptionRequest:
      type: object
      allOf:
        - $ref: "#/components/schemas/Subscription"